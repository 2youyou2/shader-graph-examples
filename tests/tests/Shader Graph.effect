// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      properties: &props
        {{properties_mtl}}
  - name: transparent
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      depthStencilState: &d1
        depthTest: true
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
  - name: add
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      rasterizerState: &r1 { cullMode: none }
      depthStencilState: *d1
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one
          blendSrcAlpha: src_alpha
          blendDstAlpha: one
      properties: *props
  - name: alpha-blend
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      rasterizerState: *r1
      depthStencilState: *d1
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%



CCProgram shader_graph_common %{

void randomRange (vec2 seed, float min, float max, out float out) {
    float randomno =  frac(sin(dot(seed, vec2(12.9898, 78.233)))*43758.5453);
    out = lerp(Min, Max, randomno);
}

#define saturate(Value) clamp(Value, 0., 1.)

}%


CCProgram properties %{
  uniform Properties {
    {{properties}}
  };

  {{properties_sampler}}
}%

CCProgram unlit-vs %{
  precision highp float;
  #include <input>
  #include <cc-global>
  #include <cc-local-batch>
  #include <properties>

  
        #include<shader_graph_common>
        

  vec4 vert () {
    vec4 position;
    CCVertInput(position);

    mat4 matWorld;
    CCGetWorldMatrix(matWorld);

    


    position = ;

    return cc_matProj * (cc_matView * matWorld) * position;
  }
}%

CCProgram unlit-fs %{
  precision mediump float;
  #include <output>
  #include <properties>
  
  
        #include<shader_graph_common>
        

  vec4 frag () {
    vec4 o = vec4(1.);

    

    float var_9 = 0;
    float var_14 = 1;
    
    var_12 = var_9 + var_14;

    o.rgb *= var_7;
    o.a *= var_12;

    return CCFragOutput(o);
  }
}%
