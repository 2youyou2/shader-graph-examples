"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("../../../base");
const utils_1 = require("../../../utils");
class InvertColorsNode extends base_1.ShaderNode {
    generateCode() {
        let ins = this.inputSlots[0];
        let precision = ins.concretePrecision;
        let inputVarName = ins.varName;
        let code = '';
        if (!ins.connectSlot) {
            code += `${utils_1.getPrecisionName(precision)} ${inputVarName} = ${ins.slotValue};`;
        }
        else {
            inputVarName = ins.connectSlot.varName;
        }
        let value;
        if (precision > 1) {
            let values = [];
            values.push(this.data.m_RedChannel ? `1. - ${inputVarName}.r` : `${inputVarName}.r`);
            values.push(this.data.m_GreenChannel ? `1. - ${inputVarName}.g` : `${inputVarName}.g`);
            values.push(this.data.m_BlueChannel ? `1. - ${inputVarName}.b` : `${inputVarName}.b`);
            values.push(this.data.m_AlphaChannel ? `1. - ${inputVarName}.a` : `${inputVarName}.a`);
            values.length = precision;
            value = values.join(', ');
        }
        else {
            value = this.data.m_RedChannel ? `1. - ${inputVarName}` : `${inputVarName}`;
        }
        code += `${utils_1.getPrecisionName(precision)} ${this.getOutputVarName(0)} = ${utils_1.getPrecisionName(precision)}(${value});`;
        return code;
    }
}
exports.default = InvertColorsNode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW52ZXJ0Q29sb3JzTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9ub2Rlcy9hcnRpc3RpYy9hZGp1c3RtZW50L0ludmVydENvbG9yc05vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkM7QUFDM0MsMENBQWtEO0FBRWxELE1BQXFCLGdCQUFpQixTQUFRLGlCQUFVO0lBQ3BELFlBQVk7UUFDUixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQUksU0FBUyxHQUFHLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztRQUV0QyxJQUFJLFlBQVksR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDO1FBQy9CLElBQUksSUFBSSxHQUFXLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUNsQixJQUFJLElBQUksR0FBRyx3QkFBZ0IsQ0FBQyxTQUFTLENBQUMsSUFBSSxZQUFZLE1BQU0sR0FBRyxDQUFDLFNBQVMsR0FBRyxDQUFDO1NBQ2hGO2FBQ0k7WUFDRCxZQUFZLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7U0FDMUM7UUFFRCxJQUFJLEtBQWEsQ0FBQztRQUNsQixJQUFJLFNBQVMsR0FBRyxDQUFDLEVBQUU7WUFDZixJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUE7WUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsUUFBUSxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxZQUFZLElBQUksQ0FBQyxDQUFDO1lBQ3JGLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFFBQVEsWUFBWSxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsWUFBWSxJQUFJLENBQUMsQ0FBQztZQUN2RixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxRQUFRLFlBQVksSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLFlBQVksSUFBSSxDQUFDLENBQUM7WUFDdEYsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsUUFBUSxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxZQUFZLElBQUksQ0FBQyxDQUFDO1lBRXZGLE1BQU0sQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1lBRTFCLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzdCO2FBQ0k7WUFDRCxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFFBQVEsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsWUFBWSxFQUFFLENBQUM7U0FDL0U7UUFFRCxJQUFJLElBQUksR0FBRyx3QkFBZ0IsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLE1BQU0sd0JBQWdCLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7UUFDakgsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztDQUNKO0FBakNELG1DQWlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNoYWRlck5vZGUgfSBmcm9tIFwiLi4vLi4vLi4vYmFzZVwiO1xyXG5pbXBvcnQgeyBnZXRQcmVjaXNpb25OYW1lIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnZlcnRDb2xvcnNOb2RlIGV4dGVuZHMgU2hhZGVyTm9kZSB7XHJcbiAgICBnZW5lcmF0ZUNvZGUgKCkge1xyXG4gICAgICAgIGxldCBpbnMgPSB0aGlzLmlucHV0U2xvdHNbMF07XHJcbiAgICAgICAgbGV0IHByZWNpc2lvbiA9IGlucy5jb25jcmV0ZVByZWNpc2lvbjtcclxuXHJcbiAgICAgICAgbGV0IGlucHV0VmFyTmFtZSA9IGlucy52YXJOYW1lO1xyXG4gICAgICAgIGxldCBjb2RlOiBzdHJpbmcgPSAnJztcclxuICAgICAgICBpZiAoIWlucy5jb25uZWN0U2xvdCkge1xyXG4gICAgICAgICAgICBjb2RlICs9IGAke2dldFByZWNpc2lvbk5hbWUocHJlY2lzaW9uKX0gJHtpbnB1dFZhck5hbWV9ID0gJHtpbnMuc2xvdFZhbHVlfTtgO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaW5wdXRWYXJOYW1lID0gaW5zLmNvbm5lY3RTbG90LnZhck5hbWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdmFsdWU6IHN0cmluZztcclxuICAgICAgICBpZiAocHJlY2lzaW9uID4gMSkge1xyXG4gICAgICAgICAgICBsZXQgdmFsdWVzOiBzdHJpbmdbXSA9IFtdXHJcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKHRoaXMuZGF0YS5tX1JlZENoYW5uZWwgPyBgMS4gLSAke2lucHV0VmFyTmFtZX0ucmAgOiBgJHtpbnB1dFZhck5hbWV9LnJgKTtcclxuICAgICAgICAgICAgdmFsdWVzLnB1c2godGhpcy5kYXRhLm1fR3JlZW5DaGFubmVsID8gYDEuIC0gJHtpbnB1dFZhck5hbWV9LmdgIDogYCR7aW5wdXRWYXJOYW1lfS5nYCk7XHJcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKHRoaXMuZGF0YS5tX0JsdWVDaGFubmVsID8gYDEuIC0gJHtpbnB1dFZhck5hbWV9LmJgIDogYCR7aW5wdXRWYXJOYW1lfS5iYCk7XHJcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKHRoaXMuZGF0YS5tX0FscGhhQ2hhbm5lbCA/IGAxLiAtICR7aW5wdXRWYXJOYW1lfS5hYCA6IGAke2lucHV0VmFyTmFtZX0uYWApO1xyXG5cclxuICAgICAgICAgICAgdmFsdWVzLmxlbmd0aCA9IHByZWNpc2lvbjtcclxuXHJcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWVzLmpvaW4oJywgJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuZGF0YS5tX1JlZENoYW5uZWwgPyBgMS4gLSAke2lucHV0VmFyTmFtZX1gIDogYCR7aW5wdXRWYXJOYW1lfWA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb2RlICs9IGAke2dldFByZWNpc2lvbk5hbWUocHJlY2lzaW9uKX0gJHt0aGlzLmdldE91dHB1dFZhck5hbWUoMCl9ID0gJHtnZXRQcmVjaXNpb25OYW1lKHByZWNpc2lvbil9KCR7dmFsdWV9KTtgO1xyXG4gICAgICAgIHJldHVybiBjb2RlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==